package com.zensar.firstspringbootapp.controllers;

import java.util.ArrayList;
import java.util.List;

import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PatchMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.zensar.firstspringbootapp.entity.Product;

@RestController
@RequestMapping("/products/api/v1")
public class ProductController {

	List<Product> products = new ArrayList<>();

	public ProductController() {
		products.add(new Product(1, "IPad", 20000));
		products.add(new Product(2, "IPhone", 50000));
		products.add(new Product(1, "Mac", 80000));
	}

	// @RequestMapping(value = "/products",method= {RequestMethod.GET})
	@GetMapping()
	public List<Product> getAllProducts() {
		return products;
	}

	@GetMapping("/{productId}")
	public Product getProduct(@PathVariable("productId")int productId) {
		for(Product product :products) {
			if(product.getProductId()==productId) {
				return product;
			}
		}
		return null;
	}

	@PostMapping
	public void insertProduct(@RequestBody Product product) {
		products.add(product);
	}

	@DeleteMapping
	public void deleteProduct(int productId) {
		
		for(Product product :products) {
			if(product.getProductId()==productId) {
				products.remove(product);
			}
		}
		
	}

	@PutMapping
	public void updateProduct(int productId, Product product) {
		System.out.println("public void updateProduct(int productId, Product product)");
	}

}
